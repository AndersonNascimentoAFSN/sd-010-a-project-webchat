<!DOCTYPE html>
<html lang="en">
<head>
  <title>WebChat Project</title>
</head>
<body>
  <form id="new-user-form">
    <input 
      id="new-user-input"
      placeholder="Insert your name"
      data-testid="nickname-box"
    >
    <button id="save-nickname" data-testid="nickname-button">Save</button>
  </form>
  <ul id="users-list"></ul>
  <br>
  <ul id="message-list"></ul>
  <form id="message-form">
    <input id="text-input" data-testid="message-box"/>
    <button id="send-btn" data-testid="send-button">Send</button>
  </form>
</body>
<script src="/socket.io/socket.io.js"></script>
<script>
  const socket = io();

  const userForm = document.getElementById('new-user-form');
  const userInput = document.getElementById('new-user-input');
  const userList = document.getElementById('users-list');
  const saveName = document.getElementById('save-nickname');

  const textForm = document.getElementById('message-form');
  const chatText = document.getElementById('text-input');
  const chatMessages = document.getElementById('message-list');

  let savedName;

  const getName = () => {
    const socketId = socket.id;
    const nameArray = socketId.split('')
      .splice(socketId.length - 16)
      .join('');
    return nameArray;
  }


  textForm.addEventListener('submit', (event) => {
    event.preventDefault();
    const nickname = savedName;
    const chatMessage = chatText.value.toString();
    socket.emit('message', { chatMessage, nickname });
    chatText.value = '';
    return false;
  });

  const createMessage = (msg) => {
    const messageLi = document.createElement('li');
    messageLi.innerText = msg;
    messageLi.dataset.testid = 'message';
    chatMessages.appendChild(messageLi);
  };

  socket.on('message', (msg) => {
    createMessage(msg);
  });

  userForm.addEventListener('submit', (event) => {
    event.preventDefault();
    socket.emit('save-user', userInput.value);
    userInput.value = '';
    return false;
  })

  const createUser = (nickName) => {
    const userLi = document.createElement('li');
    userLi.innerText = savedName;
    userLi.dataset.testid = "online-user";
    userList.appendChild(userLi);
  }

  socket.on('new-connection', (name) => {
    savedName = getName(name);
    createUser(getName(name));
  })

  socket.on('new-user', (serverReturn) => {
    savedName = (serverReturn.nickName);
    createUser(serverReturn.nickName);
  })
</script>
</html>