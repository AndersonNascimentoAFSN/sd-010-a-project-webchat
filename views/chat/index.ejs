<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta http-equiv="X-UA-Compatible" content="IE=edge">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <script src='/socket.io/socket.io.js'></script>
  <title>TryChat</title>
</head>
<body>

  <main>

    <header>
      <h1 class="title">TryChat</h1>
    </header>

    <div class="c_webchat">
      <input type="text" placeholder="Insira seu nickname" data-testid="nickname-box" class="webchat_nickname__input webchat__input"/>
      <button type="button" data-testid="nickname-button" class="webchat_nickname__button webchat__button">Salvar</button>
      <ul data-testid="online-user" class="webchat_user__box webchat_box"></ul>
      <ul data-testid="message" class="webchat__message__box webchat_box">
        <% messages.forEach(({ message, nickname, timestamp }) => { %>
          <li><%= `${timestamp} - ${nickname}: ${message}` %></li>
        <% }) %>
      </ul>
      <input type="text" placeholder="Digite uma nova mensagem aqui" data-testid="message-box" class="webchat__message__input webchat__input"/>
      <button type="button" data-testid="send-button" class="webchat__message__buttonn webchat__button">Enviar</button>
    </div>

  </main>
  
  <script>
    const socket = io('http://localhost:3000');
    const userButton = document.querySelector('.webchat_nickname__button');
    const userBox = document.querySelector('.webchat_user__box');
    const messageButton = document.querySelector('.webchat__message__buttonn');
    const messageBox = document.querySelector('.webchat__message__box');
    
    const createElementsNickNameInTheBox = (nicknames) => {
      nicknames.forEach(nickname => {
        const nicknameElement = document.createElement('li');
        nicknameElement.setAttribute('data-testid', 'online-user');
        nicknameElement.textContent = nickname;
        userBox.appendChild(nicknameElement);
      });
    }

    const deleteElementsNickNameInTheBox = () => {
      const nicknameElements = Array.from(userBox.getElementsByTagName('li'));
      nicknameElements.forEach(nicknameElement => nicknameElement.remove());
    }

    const createElementsMessageInTheBox = (message) => {
      const messageElement = document.createElement('li');
      messageElement.setAttribute('data-testid', 'message');
      messageElement.textContent = message;
      messageBox.appendChild(messageElement);
    }

    userButton.addEventListener('click', (_e) => {
      const nickname = document.querySelector('.webchat_nickname__input');
      socket.emit('nickname', nickname.value);

      nickname.value = '';
    });

    socket.on('nickname', (nicknames) => {
      deleteElementsNickNameInTheBox();
      createElementsNickNameInTheBox(nicknames);
    });

    messageButton.addEventListener('click', (_e) => {
      const message = document.querySelector('.webchat__message__input');
      socket.emit('message', { chatMessage: message.value, nickname: socket.id });

      message.value = '';
    });

    socket.on('message', (message) => {
      createElementsMessageInTheBox(message);
    });
  </script>

  <style type="text/css">
    * {
      box-sizing: border-box;
      margin: 0;
      padding: 0;
    }

    .title {
      text-align: center;
      margin-top: 10vh;
    }

    .c_webchat {
      max-width: 1200px;
      margin: 20px auto;
      display: grid;
      grid-gap: 10px;
      grid-template:
      "nickname_input nickname_button message_box message_box" 5vh
      "user_box user_box message_box message_box" 20vh
      "user_box user_box message_box message_box" 30vh
      "message_input message_input message_input message_button" 8vh
      / 3fr 1fr 5fr 1fr;
    }
    .webchat_nickname__input {
      grid-area: nickname_input;
    }

    .webchat_nickname__button {
      grid-area: nickname_button;
    }

    .webchat_user__box {
      grid-area: user_box;
    }

    .webchat__message__box {
      grid-area: message_box;
    }

    .webchat_user__box, .webchat__message__box {
      padding: 10px;
      list-style-type: none;
    }

    .webchat__message__input {
      grid-area: message_input;
    }

    .webchat_message_button {
      grid-area: message_button;
    }

    .webchat__button {
      cursor: pointer;
    }

    .webchat__input {
      padding: 10px;
    }

    .webchat_box {
      border: 2px dotted black;
    }
  </style>
  
</body>
</html>