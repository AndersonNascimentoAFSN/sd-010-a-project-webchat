<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta http-equiv="X-UA-Compatible" content="IE=edge">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <script src="http://localhost:3000/socket.io/socket.io.js"></script>
  <title>Client chat</title>
</head>
<body>
  <form id="nicknameForm">
    <input id="userNickname" type="text" placeholder="Insira seu nickname"/>
    <button id="btnNickname">Slavar</button>
  </form>
  <div>
    <ul id="nicknames">
    </ul>
  </div>

  <form id="messsageForm">
    <input id="messageUser" type="text" placeholder="Digite uma nova mensagem aqui"/>
    <button>Enviar</button>
  </form>
    <script>
      const socket = io();
      const formMessage = document.querySelector('#messsageForm');
      const userMessage = document.querySelector('#messageUser');
      
      const formNickname = document.querySelector('#nicknameForm');
      const userNickname = document.querySelector('#userNickname')

      formNickname.addEventListener('submit', (e) => {
        e.preventDefault();
        socket.emit('nickname', userNickname.value);
        userNickname.value = '';
        return false;
      });

      const createNickname = (nickname) => {
        const nicknamesUl = document.querySelector('#nicknames');
        const li = document.createElement('li');
        li.innerText = nickname;
        nicknamesUl.appendChild(li);
      }
      
      formMessage.addEventListener('submit', (e) => {
        e.preventDefault();
        const nick = socket.id.substring(0, 16);
        socket.emit('message', { chatMessage: userMessage.value, nickname: nick });
        userMessage.value = '';
      });

      const createMessage = (message) => {
        const messageUl = document.querySelector('#messages');
        const li = document.createElement('li');
        li.innerText = message;
        messageUl.appendChild(li);
      }
      
      socket.on('serverNickname', ({nickname}) => createNickname(nickname));
      
      socket.on('message', (message) => createMessage(message));
      
      window.onbeforeunload = () => {
        socket.disconnect();
      }; 
    </script>

<div>
  <ul id="messages">
    </ul>
  </div>
</body>
</html>
