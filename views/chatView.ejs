<!DOCTYPE html>
<html lang="pt-br">

<head>
  <meta charset="UTF-8">
  <meta http-equiv="X-UA-Compatible" content="IE=edge">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <script src="http://localhost:3000/socket.io/socket.io.js"></script>
  <title>Uai Chat</title>
</head>

<body>
  <header>
    <div data-testid="online-user" id="name"></div>
    <form>
      <input type="text" name="nickName" id="nckNm" data-testid="nickname-box">
      <button type="button" id="newNckNm" data-testid="nickname-button">Atualizar</button>
    </form>
  </header>
  <main>
    <div>
      <ul id="msgs">
      </ul>
    </div>
  </main>
  <form>
    <input type="text" name="msg" id="msg" data-testid="message-box">
    <button type="button" id="sendBtn" data-testid="send-button">Enviar</button>
  </form>
  <aside>
    <ul>
    </ul>
    <button id="exit-btn">Sair</button>
  </aside>
  <script>
    const socket = io();

    // Elements
    const nickNameParent = document.querySelector('#name');
    const newNameBtn = document.querySelector('#newNckNm');
    const nameInput = document.querySelector('#nckNm');
    const msgList = document.querySelector('#msgs');
    const msgText = document.querySelector('#msg');
    const sendBtn = document.querySelector('#sendBtn');

    // Helpers  e mÃ©todos
    const createChildren = (parent, content, element, testId) => {
      content.map((item) => {
        const node = document.createElement(element);
        node.innerText = item;
        node.setAttribute('data-testid',testId);
        return node;
      }).forEach((child) => parent.appendChild(child));
    };

    // Escutadores do socket
    socket.on('defaultNick', (defaultNick) => {
      nickNameParent.innerText = defaultNick;
      sessionStorage.setItem('nickname', defaultNick);
    });

    socket.on('message', (msg) => {
      createChildren(msgList, [msg], 'li', 'message');
    });

    // Eventos do DOM
    sendBtn.addEventListener('click', (e) => {
      e.preventDefault();
      if (!msgText.value) return;
      socket.emit('message', {
        chatMessage: msgText.value,
        nickname: sessionStorage.getItem('nickname'),
      });
      msgText.value = '';
    });

    newNameBtn.addEventListener('click', (e) => {
      e.preventDefault();
      const name = nameInput.value;
      if (!name) return;
      nickNameParent.innerText = name;
      sessionStorage.setItem('nickname', name);
      nameInput.value = '';
    });

  </script>
</body>

</html>